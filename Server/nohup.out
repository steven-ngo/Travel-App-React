Example app listening on port 3000!
Example app listening on port 3000!
{ [Error: ER_ACCESS_DENIED_ERROR: Access denied for user ''@'localhost' (using password: YES)]
  code: 'ER_ACCESS_DENIED_ERROR',
  errno: 1045,
  sqlMessage: 'Access denied for user \'\'@\'localhost\' (using password: YES)',
  sqlState: '28000',
  fatal: true }
Example app listening on port 3000!
{ [Error: ER_ACCESS_DENIED_ERROR: Access denied for user ''@'localhost' (using password: YES)]
  code: 'ER_ACCESS_DENIED_ERROR',
  errno: 1045,
  sqlMessage: 'Access denied for user \'\'@\'localhost\' (using password: YES)',
  sqlState: '28000',
  fatal: true }
{ [Error: ER_ACCESS_DENIED_ERROR: Access denied for user ''@'localhost' (using password: YES)]
  code: 'ER_ACCESS_DENIED_ERROR',
  errno: 1045,
  sqlMessage: 'Access denied for user \'\'@\'localhost\' (using password: YES)',
  sqlState: '28000',
  fatal: true }
Example app listening on port 3000!
Example app listening on port 3000!
Example app listening on port 3000!
Example app listening on port 3000!
Example app listening on port 3000!
events.js:141
      throw er; // Unhandled 'error' event
      ^

Error: Connection lost: The server closed the connection.
    at Protocol.end (/home/ec2-user/ServerTravelApp/node_modules/mysql/lib/protocol/Protocol.js:112:13)
    at Socket.<anonymous> (/home/ec2-user/ServerTravelApp/node_modules/mysql/lib/Connection.js:97:28)
    at Socket.<anonymous> (/home/ec2-user/ServerTravelApp/node_modules/mysql/lib/Connection.js:502:10)
    at emitNone (events.js:72:20)
    at Socket.emit (events.js:166:7)
    at endReadableNT (_stream_readable.js:913:12)
    at nextTickCallbackWith2Args (node.js:442:9)
    at process._tickCallback (node.js:356:17)
[33m[nodemon] 1.18.6[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node index.js`[39m
events.js:141
      throw er; // Unhandled 'error' event
      ^

Error: EBADF: bad file descriptor, read
    at Error (native)
